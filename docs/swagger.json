{
    "swagger": "2.0",
    "info": {
        "description": "TerrAPI is a service designed to simplify and automate your deployments.",
        "title": "TerrAPI Controller",
        "contact": {
            "name": "Support",
            "url": "https://github.com/terrapi-solution",
            "email": "contact@thomas-illiet.fr"
        },
        "version": "1.0"
    },
    "paths": {
        "/example/helloworld": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "ping example !",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/activities/{deploymentId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ðŸ“° Activity"
                ],
                "summary": "List all deployments for a specific deployment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Activity"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/deployments": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ðŸ“° Deployment"
                ],
                "summary": "List all deployments.",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Deployment"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ðŸ“° Deployment"
                ],
                "summary": "Create a new deployment.",
                "parameters": [
                    {
                        "description": "Deployment",
                        "name": "deployment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeploymentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Deployment"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/deployments/{deploymentId}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ðŸ“° Deployment"
                ],
                "summary": "Get a specific deployment.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Deployment ID",
                        "name": "deploymentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Deployment"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPError"
                        }
                    }
                }
            }
        },
        "/v1/modules": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ðŸ“° Module"
                ],
                "summary": "List all modules.",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Module"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Activity": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "pointer": {
                    "type": "string"
                }
            }
        },
        "models.Deployment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.DeploymentStatus"
                }
            }
        },
        "models.DeploymentRequest": {
            "type": "object",
            "properties": {
                "module_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DeploymentVariable"
                    }
                }
            }
        },
        "models.DeploymentStatus": {
            "type": "string",
            "enum": [
                "unknown",
                "pending",
                "running",
                "failed",
                "succeeded"
            ],
            "x-enum-varnames": [
                "Unknown",
                "Pending",
                "Running",
                "Failed",
                "Succeeded"
            ]
        },
        "models.DeploymentVariable": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Module": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.ModuleType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ModuleType": {
            "type": "string",
            "enum": [
                "git"
            ],
            "x-enum-varnames": [
                "Git"
            ]
        },
        "rest.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "token",
            "in": "header"
        }
    }
}